input {
    tcp {
        port => "16514"
        codec => json
    }
}

filter {
        if [CWD]{
                split{
                        field => "CWD"
                }
        }

        if [EXECVE]{
                split{
                        field => "EXECVE"
                }
        }

        if [PATH]{
                split{
                        field => "PATH"
                }
        }

        if [PROCTITLE]{
                split{
                        field => "PROCTITLE"
                }
        }

        if [SYSCALL]{
                split{
                        field => "SYSCALL"
                }
        }

        if [BPRM_FCAPS]{
                split{
                        field => "BPRM_FCAPS"
                }
        }

        if [USER_END]{
                split{
                        field => "USER_END"
                }
        }

        if [CRED_ACQ]{
                split{
                        field => "CRED_ACQ"
                }
        }

        if [LOGIN]{
                split{
                        field => "LOGIN"
                }
        }

        if [USER_START]{
                split{
                        field => "USER_START"
                }
        }

        if [USER_ACCT]{
                split{
                        field => "USER_ACCT"
                }
        }

        if [SERVICE_START]{
                split{
                        field => "SERVICE_START"
                }
        }

        if [SERVICE_STOP]{
                split{
                        field => "SERVICE_STOP"
                }
        }

        if [AVC]{
                split{
                        field => "AVC"
                }
        }

        if [USER_LOGIN]{
                split{
                        field => "USER_LOGIN"
                }
        }

        if [CRED_REFR]{
                split{
                        field => "CRED_REFR"
                }
        }

        if [USER_ROLE_CHANGE]{
                split{
                        field => "USER_ROLE_CHANGE"
                }
        }

        if [USER_AUTH]{
                split{
                        field => "USER_AUTH"
                }
        }

        if [CRED_DISP]{
                split{
                        field => "CRED_DISP"
                }
        }

        if [CONFIG_CHANGE]{
                split{
                        field => "CONFIG_CHANGE"
                }
        }

        if [SOCKADDR]{
                split{
                        field => "SOCKADDR"
                }
        }

        if [NETFILTER_CFG]{
                split{
                        field => "NETFILTER_CFG"
                }
        }

        if [USER_LOGOUT]{
                split{
                        field => "USER_LOGOUT"
                }
        }

        if [ADD_GROUP]{
                split{
                        field => "ADD_GROUP"
                }
        }

        if [ADD_USER]{
                split{
                        field => "ADD_USER"
                }
        }

        if [ANOM_ABEND]{
                split{
                        field => "ANOM_ABEND"
                }
        }

        if [ANOM_LINK]{
                split{
                        field => "ANOM_LINK"
                }
        }

        if [ANOM_PROMISCUOUS]{
                split{
                        field => "ANOM_PROMISCUOUS"
                }
        }

        if [ANOM_RBAC_INTEGRITY_FAIL]{
                split{
                        field => "ANOM_RBAC_INTEGRITY_FAIL"
                }
        }

        if [CRYPTO_KEY_USER]{
                split{
                        field => "CRYPTO_KEY_USER"
                }
        }

        if [CRYPTO_SESSION]{
                split{
                        field => "CRYPTO_SESSION"
                }
        }

        if [DAEMON_END]{
                split{
                        field => "DAEMON_END"
                }
        }

        if [DAEMON_START]{
                split{
                        field => "DAEMON_START"
                }
        }

        if [DEL_USER]{
                split{
                        field => "DEL_USER"
                }
        }

        if [GRP_MGMT]{
                split{
                        field => "GRP_MGMT"
                }
        }

        if [KERN_MODULE]{
                split{
                        field => "KERN_MODULE"
                }
        }

        if [MAC_POLICY_LOAD]{
                split{
                        field => "MAC_POLICY_LOAD"
                }
        }

        if [MMAP]{
                split{
                        field => "MMAP"
                }
        }

        if [OBJ_PID]{
                split{
                        field => "OBJ_PID"
                }
        }

        if [SOFTWARE_UPDATE]{
                split{
                        field => "SOFTWARE_UPDATE"
                }
        }

        if [SYSTEM_BOOT]{
                split{
                        field => "SYSTEM_BOOT"
                }
        }

        if [SYSTEM_RUNLEVEL]{
                split{
                        field => "SYSTEM_RUNLEVEL"
                }
        }

        if [USER_AVC]{
                split{
                        field => "USER_AVC"
                }
        }

        if [USER_CHAUTHTOK]{
                split{
                        field => "USER_CHAUTHTOK"
                }
        }

        if [USER_CMD]{
                split{
                        field => "USER_CMD"
                }
        }

        if [USER_ERR]{
                split{
                        field => "USER_ERR"
                }
        }

        if [USER_MGMT]{
                split{
                        field => "USER_MGMT"
                }
        }

        if [VIRT_CONTROL]{
                split{
                        field => "VIRT_CONTROL"
                }
        }
}

output {
    elasticsearch {
        hosts => ["https://ip_host:9200"]
        index => "audit-%{+YYYY-MM-dd}"
        ssl => true
        manage_template => false
        cacert => '/etc/logstash/elastic-stack-ca.pem'
        ssl_certificate_verification => false
        user => 'user'
        password => 'pass'

    }
}

